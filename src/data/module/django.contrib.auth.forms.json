{
  "functions": [],
  "classes": [
    {
      "name": "ReadOnlyPasswordHashWidget",
      "methods": [
        {
          "name": "get_context",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "name",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "attrs",
              "annotation": null
            }
          ]
        },
        {
          "name": "id_for_label",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "id_",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "ReadOnlyPasswordHashField",
      "methods": [],
      "classes": []
    },
    {
      "name": "UsernameField",
      "methods": [
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "widget_attrs",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "widget",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "UserCreationForm",
      "methods": [
        {
          "name": "clean_password2",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "commit",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Meta",
          "methods": [],
          "classes": []
        }
      ],
      "docstring": "\"\"\"\n    A form that creates a user, with no privileges, from the given username and\n    password.\n    \"\"\""
    },
    {
      "name": "UserChangeForm",
      "methods": [],
      "classes": [
        {
          "name": "Meta",
          "methods": [],
          "classes": []
        }
      ]
    },
    {
      "name": "AuthenticationForm",
      "methods": [
        {
          "name": "clean",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "confirm_login_allowed",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "user",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Controls whether the given User may log in. This is a policy setting,\n        independent of end-user authentication. This default behavior is to\n        allow login by active users, and reject login by inactive users.\n\n        If the given user cannot log in, this method should raise a\n        ``ValidationError``.\n\n        If the given user may log in, this method should return None.\n        \"\"\""
        },
        {
          "name": "get_user",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_invalid_login_error",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Base class for authenticating users. Extend this to get a form that accepts\n    username/password logins.\n    \"\"\""
    },
    {
      "name": "PasswordResetForm",
      "methods": [
        {
          "name": "send_mail",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "subject_template_name",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "email_template_name",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "context",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "from_email",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "to_email",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "html_email_template_name",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Send a django.core.mail.EmailMultiAlternatives to `to_email`.\n        \"\"\""
        },
        {
          "name": "get_users",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "email",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Given an email, return matching user(s) who should receive a reset.\n\n        This allows subclasses to more easily customize the default policies\n        that prevent inactive users and users with unusable passwords from\n        resetting their password.\n        \"\"\""
        },
        {
          "name": "save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "domain_override",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "subject_template_name",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "email_template_name",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "use_https",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "token_generator",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "from_email",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "request",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "html_email_template_name",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "extra_email_context",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Generate a one-use only link for resetting password and send it to the\n        user.\n        \"\"\""
        }
      ],
      "classes": []
    },
    {
      "name": "SetPasswordForm",
      "methods": [
        {
          "name": "clean_new_password2",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "commit",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    A form that lets a user change set their password without entering the old\n    password\n    \"\"\""
    },
    {
      "name": "PasswordChangeForm",
      "methods": [
        {
          "name": "clean_old_password",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Validate that the old_password field is correct.\n        \"\"\""
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    A form that lets a user change their password by entering their old\n    password.\n    \"\"\""
    },
    {
      "name": "AdminPasswordChangeForm",
      "methods": [
        {
          "name": "clean_password2",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "commit",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Save the new password.\"\"\""
        },
        {
          "name": "changed_data",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    A form used to change the password of a user in the admin interface.\n    \"\"\""
    }
  ]
}