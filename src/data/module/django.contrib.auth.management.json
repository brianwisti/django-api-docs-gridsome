{
  "functions": [
    {
      "name": "create_permissions",
      "params": [
        {
          "prefix": "",
          "name": "app_config",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "verbosity",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "interactive",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "using",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "apps",
          "annotation": null
        },
        {
          "prefix": "**",
          "name": "kwargs",
          "annotation": null
        }
      ]
    },
    {
      "name": "get_system_username",
      "params": [],
      "docstring": "\"\"\"\n    Return the current system user's username, or an empty string if the\n    username could not be determined.\n    \"\"\""
    },
    {
      "name": "get_default_username",
      "params": [
        {
          "prefix": "",
          "name": "check_db",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "database",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Try to determine the current system user's username to use as a default.\n\n    :param check_db: If ``True``, requires that the username does not match an\n        existing ``auth.User`` (otherwise returns an empty string).\n    :param database: The database where the unique check will be performed.\n    :returns: The username, or an empty string if no username can be\n        determined or the suggested username is already taken.\n    \"\"\""
    }
  ],
  "classes": [],
  "doc": "\"\"\"\nCreates permissions for all installed apps that need permissions.\n\"\"\""
}