{
  "functions": [],
  "classes": [
    {
      "name": "ContentTypeManager",
      "methods": [
        {
          "name": "get_by_natural_key",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "app_label",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_for_model",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_concrete_model",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return the ContentType object for a given model, creating the\n        ContentType if necessary. Lookups are cached so that subsequent lookups\n        for the same model don't hit the database.\n        \"\"\""
        },
        {
          "name": "get_for_models",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "*",
              "name": "models",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_concrete_models",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Given *models, return a dictionary mapping {model: content_type}.\n        \"\"\""
        },
        {
          "name": "get_for_id",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "id",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Lookup a ContentType by ID. Use the same shared cache as get_for_model\n        (though ContentTypes are not created on-the-fly by get_by_id).\n        \"\"\""
        },
        {
          "name": "clear_cache",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Clear out the content-type cache.\n        \"\"\""
        }
      ],
      "classes": []
    },
    {
      "name": "ContentType",
      "methods": [
        {
          "name": "name",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        },
        {
          "name": "app_labeled_name",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        },
        {
          "name": "model_class",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return the model class for this type of content.\"\"\""
        },
        {
          "name": "get_object_for_this_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return an object of this type for the keyword arguments given.\n        Basically, this is a proxy around this object_type's get_object() model\n        method. The ObjectNotExist exception, if thrown, will not be caught,\n        so code that calls this method should catch it.\n        \"\"\""
        },
        {
          "name": "get_all_objects_for_this_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return all objects of this type for the keyword arguments given.\n        \"\"\""
        },
        {
          "name": "natural_key",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Meta",
          "methods": [],
          "classes": []
        }
      ]
    }
  ]
}