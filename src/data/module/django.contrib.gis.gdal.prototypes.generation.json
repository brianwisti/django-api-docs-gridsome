{
  "functions": [
    {
      "name": "bool_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "errcheck",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"Generate a ctypes function that returns a boolean value.\"\"\""
    },
    {
      "name": "double_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "errcheck",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "strarg",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "cpl",
          "annotation": null
        }
      ],
      "docstring": "\"Generate a ctypes function that returns a double value.\""
    },
    {
      "name": "geom_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "offset",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Generate a function that returns a Geometry either by reference\n    or directly (if the return_geom keyword is set to True).\n    \"\"\""
    },
    {
      "name": "int_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "errcheck",
          "annotation": null
        }
      ],
      "docstring": "\"Generate a ctypes function that returns an integer value.\""
    },
    {
      "name": "int64_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        }
      ],
      "docstring": "\"Generate a ctypes function that returns a 64-bit integer value.\""
    },
    {
      "name": "srs_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Generate a ctypes prototype for the given function with\n    the given C arguments that returns a pointer to an OGR\n    Spatial Reference System.\n    \"\"\""
    },
    {
      "name": "const_string_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "offset",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "decoding",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "cpl",
          "annotation": null
        }
      ]
    },
    {
      "name": "string_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "offset",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "str_result",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "decoding",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Generate a ctypes prototype for the given function with the\n    given argument types that returns a string from a GDAL pointer.\n    The `const` flag indicates whether the allocated pointer should\n    be freed via the GDAL library routine VSIFree -- but only applies\n    only when `str_result` is True.\n    \"\"\""
    },
    {
      "name": "void_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "errcheck",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "cpl",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    For functions that don't only return an error code that needs to\n    be examined.\n    \"\"\""
    },
    {
      "name": "voidptr_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "errcheck",
          "annotation": null
        }
      ],
      "docstring": "\"For functions that return c_void_p.\""
    },
    {
      "name": "chararray_output",
      "params": [
        {
          "prefix": "",
          "name": "func",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "argtypes",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "errcheck",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"For functions that return a c_char_p array.\"\"\""
    }
  ],
  "classes": [
    {
      "name": "gdal_char_p",
      "methods": [],
      "classes": []
    }
  ],
  "doc": "\"\"\"\n This module contains functions that generate ctypes prototypes for the\n GDAL routines.\n\"\"\""
}