{
  "functions": [
    {
      "name": "forbid_multi_line_headers",
      "params": [
        {
          "prefix": "",
          "name": "name",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "val",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "encoding",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"Forbid multi-line headers to prevent header injection.\"\"\""
    },
    {
      "name": "sanitize_address",
      "params": [
        {
          "prefix": "",
          "name": "addr",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "encoding",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Format a pair of (name, address) or an email address string.\n    \"\"\""
    }
  ],
  "classes": [
    {
      "name": "BadHeaderError",
      "methods": [],
      "classes": []
    },
    {
      "name": "MIMEMixin",
      "methods": [
        {
          "name": "as_string",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "unixfrom",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "linesep",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return the entire formatted message as a string.\n        Optional `unixfrom' when True, means include the Unix From_ envelope\n        header.\n\n        This overrides the default as_string() implementation to not mangle\n        lines that begin with 'From '. See bug #13433 for details.\n        \"\"\""
        },
        {
          "name": "as_bytes",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "unixfrom",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "linesep",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return the entire formatted message as bytes.\n        Optional `unixfrom' when True, means include the Unix From_ envelope\n        header.\n\n        This overrides the default as_bytes() implementation to not mangle\n        lines that begin with 'From '. See bug #13433 for details.\n        \"\"\""
        }
      ],
      "classes": []
    },
    {
      "name": "SafeMIMEMessage",
      "methods": [],
      "classes": []
    },
    {
      "name": "SafeMIMEText",
      "methods": [
        {
          "name": "set_payload",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "payload",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "charset",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "SafeMIMEMultipart",
      "methods": [],
      "classes": []
    },
    {
      "name": "EmailMessage",
      "methods": [
        {
          "name": "get_connection",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "fail_silently",
              "annotation": null
            }
          ]
        },
        {
          "name": "message",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "recipients",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return a list of all recipients of the email (includes direct\n        addressees as well as Cc and Bcc entries).\n        \"\"\""
        },
        {
          "name": "send",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "fail_silently",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Send the email message.\"\"\""
        },
        {
          "name": "attach",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "filename",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "content",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "mimetype",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Attach a file with the given filename and content. The filename can\n        be omitted and the mimetype is guessed, if not provided.\n\n        If the first parameter is a MIMEBase subclass, insert it directly\n        into the resulting message attachments.\n\n        For a text/* mimetype (guessed or specified), when a bytes object is\n        specified as content, decode it as UTF-8. If that fails, set the\n        mimetype to DEFAULT_ATTACHMENT_MIME_TYPE and don't decode the content.\n        \"\"\""
        },
        {
          "name": "attach_file",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "path",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "mimetype",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Attach a file from the filesystem.\n\n        Set the mimetype to DEFAULT_ATTACHMENT_MIME_TYPE if it isn't specified\n        and cannot be guessed.\n\n        For a text/* mimetype (guessed or specified), decode the file's content\n        as UTF-8. If that fails, set the mimetype to\n        DEFAULT_ATTACHMENT_MIME_TYPE and don't decode the content.\n        \"\"\""
        }
      ],
      "classes": [],
      "docstring": "\"\"\"A container for email information.\"\"\""
    },
    {
      "name": "EmailMultiAlternatives",
      "methods": [
        {
          "name": "attach_alternative",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "content",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "mimetype",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Attach an alternative content representation.\"\"\""
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    A version of EmailMessage that makes it easy to send multipart/alternative\n    messages. For example, including text and HTML versions of the text is\n    made easier.\n    \"\"\""
    }
  ]
}