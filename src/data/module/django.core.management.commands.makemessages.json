{
  "functions": [
    {
      "name": "check_programs",
      "params": [
        {
          "prefix": "*",
          "name": "programs",
          "annotation": null
        }
      ]
    },
    {
      "name": "normalize_eols",
      "params": [
        {
          "prefix": "",
          "name": "raw_contents",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Take a block of raw text that will be passed through str.splitlines() to\n    get universal newlines treatment.\n\n    Return the resulting block of text with normalized `\\n` EOL sequences ready\n    to be written to disk using current platform's native EOLs.\n    \"\"\""
    },
    {
      "name": "write_pot_file",
      "params": [
        {
          "prefix": "",
          "name": "potfile",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "msgs",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Write the `potfile` with the `msgs` contents, making sure its format is\n    valid.\n    \"\"\""
    }
  ],
  "classes": [
    {
      "name": "TranslatableFile",
      "methods": [
        {
          "name": "path",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        }
      ],
      "classes": [],
      "decorators": [
        {
          "name": "@total_ordering"
        }
      ]
    },
    {
      "name": "BuildFile",
      "methods": [
        {
          "name": "is_templatized",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "path",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "work_path",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ],
          "docstring": "\"\"\"\n        Path to a file which is being fed into GNU gettext pipeline. This may\n        be either a translatable or its preprocessed version.\n        \"\"\""
        },
        {
          "name": "preprocess",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Preprocess (if necessary) a translatable file before passing it to\n        xgettext GNU gettext utility.\n        \"\"\""
        },
        {
          "name": "postprocess_messages",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "msgs",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Postprocess messages generated by xgettext GNU gettext utility.\n\n        Transform paths as if these messages were generated from original\n        translatable files rather than from preprocessed versions.\n        \"\"\""
        },
        {
          "name": "cleanup",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Remove a preprocessed copy of a translatable file (if any).\n        \"\"\""
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Represent the state of a translatable file during the build process.\n    \"\"\""
    },
    {
      "name": "Command",
      "methods": [
        {
          "name": "add_arguments",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "parser",
              "annotation": null
            }
          ]
        },
        {
          "name": "handle",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "*",
              "name": "args",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "options",
              "annotation": null
            }
          ]
        },
        {
          "name": "gettext_version",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "settings_available",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "build_potfiles",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Build pot files and apply msguniq to them.\n        \"\"\""
        },
        {
          "name": "remove_potfiles",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "find_files",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "root",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Get all files in the given root. Also check that there is a matching\n        locale dir for each file.\n        \"\"\""
        },
        {
          "name": "process_files",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "file_list",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Group translatable files by locale directory and run pot file build\n        process for each group.\n        \"\"\""
        },
        {
          "name": "process_locale_dir",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "locale_dir",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "files",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Extract translatable literals from the specified files, creating or\n        updating the POT file for a given locale directory.\n\n        Use the xgettext GNU gettext utility.\n        \"\"\""
        },
        {
          "name": "write_po_file",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "potfile",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "locale",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Create or update the PO file for self.domain and `locale`.\n        Use contents of the existing `potfile`.\n\n        Use msgmerge and msgattrib GNU gettext utilities.\n        \"\"\""
        },
        {
          "name": "copy_plural_forms",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "msgs",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "locale",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Copy plural forms header contents from a Django catalog of locale to\n        the msgs string, inserting it at the right place. msgs should be the\n        contents of a newly created .po file.\n        \"\"\""
        }
      ],
      "classes": []
    }
  ]
}