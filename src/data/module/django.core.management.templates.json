{
  "functions": [],
  "classes": [
    {
      "name": "TemplateCommand",
      "methods": [
        {
          "name": "add_arguments",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "parser",
              "annotation": null
            }
          ]
        },
        {
          "name": "handle",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "app_or_project",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "name",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "target",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "options",
              "annotation": null
            }
          ]
        },
        {
          "name": "handle_template",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "subdir",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Determine where the app or project templates are.\n        Use django.__path__[0] as the default because the Django install\n        directory isn't known.\n        \"\"\""
        },
        {
          "name": "validate_name",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "name",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "name_or_dir",
              "annotation": null
            }
          ]
        },
        {
          "name": "download",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "url",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Download the given URL and return the file name.\n        \"\"\""
        },
        {
          "name": "splitext",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "the_path",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Like os.path.splitext, but takes off .tar, too\n        \"\"\""
        },
        {
          "name": "extract",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "filename",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Extract the given file to a temporary directory and return\n        the path of the directory with the extracted content.\n        \"\"\""
        },
        {
          "name": "is_url",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return True if the name looks like a URL.\"\"\""
        },
        {
          "name": "make_writeable",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "filename",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Make sure that the file is writeable.\n        Useful if our source is read-only.\n        \"\"\""
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Copy either a Django application layout template or a Django project\n    layout template into the specified directory.\n\n    :param style: A color style object (see django.core.management.color).\n    :param app_or_project: The string 'app' or 'project'.\n    :param name: The name of the application or project.\n    :param directory: The directory to which the template should be copied.\n    :param options: The additional variables passed to project or app templates\n    \"\"\""
    }
  ]
}