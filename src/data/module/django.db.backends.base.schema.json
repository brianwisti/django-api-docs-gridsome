{
  "functions": [],
  "classes": [
    {
      "name": "BaseDatabaseSchemaEditor",
      "methods": [
        {
          "name": "execute",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "sql",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "params",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Execute the given SQL statement, with optional parameters.\"\"\""
        },
        {
          "name": "quote_name",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "name",
              "annotation": null
            }
          ]
        },
        {
          "name": "table_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Take a model and return its table definition.\"\"\""
        },
        {
          "name": "column_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "field",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "include_default",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return the column definition for a field. The field must already have\n        had set_attributes_from_name() called.\n        \"\"\""
        },
        {
          "name": "skip_default",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "field",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Some backends don't accept default values for certain columns types\n        (i.e. MySQL longtext and longblob).\n        \"\"\""
        },
        {
          "name": "skip_default_on_alter",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "field",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Some backends don't accept default values for certain columns types\n        (i.e. MySQL longtext and longblob) in the ALTER COLUMN statement.\n        \"\"\""
        },
        {
          "name": "prepare_default",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Only used for backends which have requires_literal_defaults feature\n        \"\"\""
        },
        {
          "name": "effective_default",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "field",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return a field's effective database default value.\"\"\""
        },
        {
          "name": "quote_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return a quoted version of the value so it's safe to use in an SQL\n        string. This is not safe against injection from user code; it is\n        intended only for use in making SQL scripts or preparing default values\n        for particularly tricky backends (defaults are not user-defined, though,\n        so this is safe).\n        \"\"\""
        },
        {
          "name": "create_model",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Create a table and any accompanying indexes or unique constraints for\n        the given `model`.\n        \"\"\""
        },
        {
          "name": "delete_model",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Delete a model from the database.\"\"\""
        },
        {
          "name": "add_index",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "index",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Add an index on a model.\"\"\""
        },
        {
          "name": "remove_index",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "index",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Remove an index from a model.\"\"\""
        },
        {
          "name": "add_constraint",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "constraint",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Add a constraint to a model.\"\"\""
        },
        {
          "name": "remove_constraint",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "constraint",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Remove a constraint from a model.\"\"\""
        },
        {
          "name": "alter_unique_together",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "old_unique_together",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "new_unique_together",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Deal with a model changing its unique_together. The input\n        unique_togethers must be doubly-nested, not the single-nested\n        [\"foo\", \"bar\"] format.\n        \"\"\""
        },
        {
          "name": "alter_index_together",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "old_index_together",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "new_index_together",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Deal with a model changing its index_together. The input\n        index_togethers must be doubly-nested, not the single-nested\n        [\"foo\", \"bar\"] format.\n        \"\"\""
        },
        {
          "name": "alter_db_table",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "old_db_table",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "new_db_table",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Rename the table a model points to.\"\"\""
        },
        {
          "name": "alter_db_tablespace",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "old_db_tablespace",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "new_db_tablespace",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Move a model's table between tablespaces.\"\"\""
        },
        {
          "name": "add_field",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "field",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Create a field on a model. Usually involves adding a column, but may\n        involve adding a table instead (for M2M fields).\n        \"\"\""
        },
        {
          "name": "remove_field",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "field",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Remove a field from a model. Usually involves deleting a column,\n        but for M2Ms may involve deleting a table.\n        \"\"\""
        },
        {
          "name": "alter_field",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "old_field",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "new_field",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "strict",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Allow a field's type, uniqueness, nullability, default, column,\n        constraints, etc. to be modified.\n        `old_field` is required to compute the necessary changes.\n        If `strict` is True, raise errors if the old column does not match\n        `old_field` precisely.\n        \"\"\""
        },
        {
          "name": "remove_procedure",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "procedure_name",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "param_types",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    This class and its subclasses are responsible for emitting schema-changing\n    statements to the databases - model creation/removal/alteration, field\n    renaming, index fiddling, and so on.\n    \"\"\""
    }
  ]
}