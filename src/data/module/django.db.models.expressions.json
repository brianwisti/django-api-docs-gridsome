{
  "functions": [],
  "classes": [
    {
      "name": "SQLiteNumericMixin",
      "methods": [
        {
          "name": "as_sqlite",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "extra_context",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Some expressions with output_field=DecimalField() must be cast to\n    numeric to be properly filtered.\n    \"\"\""
    },
    {
      "name": "Combinable",
      "methods": [
        {
          "name": "bitand",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "other",
              "annotation": null
            }
          ]
        },
        {
          "name": "bitleftshift",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "other",
              "annotation": null
            }
          ]
        },
        {
          "name": "bitrightshift",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "other",
              "annotation": null
            }
          ]
        },
        {
          "name": "bitxor",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "other",
              "annotation": null
            }
          ]
        },
        {
          "name": "bitor",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "other",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Provide the ability to combine one or two objects with\n    some connector. For example F('foo') + F('bar').\n    \"\"\""
    },
    {
      "name": "BaseExpression",
      "methods": [
        {
          "name": "get_db_converters",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Responsible for returning a (sql, [params]) tuple to be included\n        in the current query.\n\n        Different backends can provide their own implementation, by\n        providing an `as_{vendor}` method and patching the Expression:\n\n        ```\n        def override_as_sql(self, compiler, connection):\n            # custom logic\n            return super().as_sql(compiler, connection)\n        setattr(Expression, 'as_' + connection.vendor, override_as_sql)\n        ```\n\n        Arguments:\n         * compiler: the query compiler responsible for generating the query.\n           Must have a compile method, returning a (sql, [params]) tuple.\n           Calling compiler(value) will return a quoted `value`.\n\n         * connection: the database connection used for the current query.\n\n        Return: (sql, params)\n          Where `sql` is a string containing ordered sql parameters to be\n          replaced with the elements of the list `params`.\n        \"\"\""
        },
        {
          "name": "contains_aggregate",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "contains_over_clause",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "contains_column_references",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "query",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "allow_joins",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "reuse",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "summarize",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_save",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Provide the chance to do any preprocessing or validation before being\n        added to the query.\n\n        Arguments:\n         * query: the backend query implementation\n         * allow_joins: boolean allowing or denying use of joins\n           in this query\n         * reuse: a set of reusable joins for multijoins\n         * summarize: a terminal aggregate clause\n         * for_save: whether this expression about to be used in a save or update\n\n        Return: an Expression to be added to the query.\n        \"\"\""
        },
        {
          "name": "conditional",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        },
        {
          "name": "field",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        },
        {
          "name": "output_field",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ],
          "docstring": "\"\"\"Return the output type of this expressions.\"\"\""
        },
        {
          "name": "convert_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ],
          "docstring": "\"\"\"\n        Expressions provide their own converters because users have the option\n        of manually specifying the output_field which may be a different type\n        from the one the database returns.\n        \"\"\""
        },
        {
          "name": "get_lookup",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "lookup",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_transform",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "name",
              "annotation": null
            }
          ]
        },
        {
          "name": "relabeled_clone",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "change_map",
              "annotation": null
            }
          ]
        },
        {
          "name": "copy",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_source_fields",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return the underlying field types used by this aggregate.\"\"\""
        },
        {
          "name": "asc",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "desc",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "reverse_ordering",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "flatten",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Recursively yield this expression and all subexpressions, in\n        depth-first order.\n        \"\"\""
        },
        {
          "name": "select_format",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "sql",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "params",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Custom format for select clauses. For example, EXISTS expressions need\n        to be wrapped in CASE WHEN on Oracle.\n        \"\"\""
        }
      ],
      "classes": [],
      "docstring": "\"\"\"Base class for all query expressions.\"\"\""
    },
    {
      "name": "Expression",
      "methods": [
        {
          "name": "identity",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"An expression that can be combined with other expressions.\"\"\"",
      "decorators": [
        {
          "name": "@deconstructible"
        }
      ]
    },
    {
      "name": "CombinedExpression",
      "methods": [
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "query",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "allow_joins",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "reuse",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "summarize",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_save",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "DurationExpression",
      "methods": [
        {
          "name": "compile",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "side",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sqlite",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "extra_context",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "TemporalSubtraction",
      "methods": [
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "F",
      "methods": [
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "query",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "allow_joins",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "reuse",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "summarize",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_save",
              "annotation": null
            }
          ]
        },
        {
          "name": "asc",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "desc",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"An object capable of resolving references to existing query objects.\"\"\"",
      "decorators": [
        {
          "name": "@deconstructible"
        }
      ]
    },
    {
      "name": "ResolvedOuterRef",
      "methods": [
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "*",
              "name": "args",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "*",
              "name": "args",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "relabeled_clone",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "relabels",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    An object that contains a reference to an outer query.\n\n    In this case, the reference to the outer query has been resolved because\n    the inner query has been used as a subquery.\n    \"\"\""
    },
    {
      "name": "OuterRef",
      "methods": [
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "*",
              "name": "args",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "relabeled_clone",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "relabels",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "Func",
      "methods": [
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "query",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "allow_joins",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "reuse",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "summarize",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_save",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "function",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "arg_joiner",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "extra_context",
              "annotation": null
            }
          ]
        },
        {
          "name": "copy",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"An SQL function call.\"\"\""
    },
    {
      "name": "Value",
      "methods": [
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "query",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "allow_joins",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "reuse",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "summarize",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_save",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        },
        {
          "name": "empty_result_set_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"Represent a wrapped value as a node within an expression.\"\"\""
    },
    {
      "name": "RawSQL",
      "methods": [
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        },
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "query",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "allow_joins",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "reuse",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "summarize",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_save",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "Star",
      "methods": [
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "Col",
      "methods": [
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "relabeled_clone",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "relabels",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_converters",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "Ref",
      "methods": [
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "query",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "allow_joins",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "reuse",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "summarize",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_save",
              "annotation": null
            }
          ]
        },
        {
          "name": "relabeled_clone",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "relabels",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Reference to column alias of the query. For example, Ref('sum_cost') in\n    qs.annotate(sum_cost=Sum('cost')) query.\n    \"\"\""
    },
    {
      "name": "ExpressionList",
      "methods": [
        {
          "name": "as_sqlite",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "extra_context",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    An expression containing multiple expressions. Can be used to provide a\n    list of expressions as an argument to another expression, like an\n    ordering clause.\n    \"\"\""
    },
    {
      "name": "ExpressionWrapper",
      "methods": [
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    An expression that can wrap another expression so that it can provide\n    extra context to the inner expression, such as the output_field.\n    \"\"\""
    },
    {
      "name": "When",
      "methods": [
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_source_fields",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "query",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "allow_joins",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "reuse",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "summarize",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_save",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "extra_context",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "Case",
      "methods": [
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "resolve_expression",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "query",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "allow_joins",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "reuse",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "summarize",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "for_save",
              "annotation": null
            }
          ]
        },
        {
          "name": "copy",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "case_joiner",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "extra_context",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    An SQL searched CASE expression:\n\n        CASE\n            WHEN n > 0\n                THEN 'positive'\n            WHEN n < 0\n                THEN 'negative'\n            ELSE 'zero'\n        END\n    \"\"\""
    },
    {
      "name": "Subquery",
      "methods": [
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "copy",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "external_aliases",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        },
        {
          "name": "get_external_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "query",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "extra_context",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    An explicit subquery. It may contain OuterRef() references to the outer\n    query which will be resolved when it is applied to that query.\n    \"\"\""
    },
    {
      "name": "Exists",
      "methods": [
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "extra_context",
              "annotation": null
            }
          ]
        },
        {
          "name": "select_format",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "sql",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "params",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "OrderBy",
      "methods": [
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "extra_context",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_oracle",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        },
        {
          "name": "reverse_ordering",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "asc",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "desc",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "Window",
      "methods": [
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sqlite",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "WindowFrame",
      "methods": [
        {
          "name": "set_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "exprs",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_source_expressions",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_group_by_cols",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            }
          ]
        },
        {
          "name": "window_frame_start_end",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "start",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "end",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Model the frame clause in window expressions. There are two types of frame\n    clauses which are subclasses, however, all processing and validation (by no\n    means intended to be complete) is done here. Thus, providing an end for a\n    frame is optional (the default is UNBOUNDED FOLLOWING, which is the last\n    row in the frame).\n    \"\"\""
    },
    {
      "name": "RowRange",
      "methods": [
        {
          "name": "window_frame_start_end",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "start",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "end",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "ValueRange",
      "methods": [
        {
          "name": "window_frame_start_end",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "start",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "end",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    }
  ]
}