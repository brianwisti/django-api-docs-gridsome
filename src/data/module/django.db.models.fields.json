{
  "functions": [
    {
      "name": "return_None",
      "params": []
    }
  ],
  "classes": [
    {
      "name": "Empty",
      "methods": [],
      "classes": []
    },
    {
      "name": "NOT_PROVIDED",
      "methods": [],
      "classes": []
    },
    {
      "name": "Field",
      "methods": [
        {
          "name": "check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_col",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "alias",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "output_field",
              "annotation": null
            }
          ]
        },
        {
          "name": "cached_col",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "select_format",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "sql",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "params",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Custom format for select clauses. For example, GIS columns need to be\n        selected as AsText(table.col) on MySQL as the table.col data can't be\n        used by Django.\n        \"\"\""
        },
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return enough information to recreate the field as a 4-tuple:\n\n         * The name of the field on the model, if contribute_to_class() has\n           been run.\n         * The import path of the field, including the class, e.g.\n           django.db.models.IntegerField. This should be the most portable\n           version, so less specific may be better.\n         * A list of positional arguments.\n         * A dict of keyword arguments.\n\n        Note that the positional or keyword arguments must contain values of\n        the following types (including inner values of collection types):\n\n         * None, bool, str, int, float, complex, set, frozenset, list, tuple,\n           dict\n         * UUID\n         * datetime.datetime (naive), datetime.date\n         * top-level classes, top-level functions - will be referenced by their\n           full import path\n         * Storage instances - these have their own deconstruct() method\n\n        This is because the values here must be serialized into a text format\n        (possibly new Python code, possibly JSON) and these are the only types\n        with encoding handlers defined.\n\n        There's no need to return the exact way the field was instantiated this\n        time, just ensure that the resulting field is the same - prefer keyword\n        arguments over positional ones, and omit parameters with their default\n        values.\n        \"\"\""
        },
        {
          "name": "clone",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Uses deconstruct() to clone a new copy of this Field.\n        Will not preserve any class attachments/attribute names.\n        \"\"\""
        },
        {
          "name": "get_pk_value_on_save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "instance",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Hook to generate new PK values on save. This method is called when\n        saving instances with no primary key value set. If this method returns\n        something else than None, then the returned value is used when saving\n        the new instance.\n        \"\"\""
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Convert the input value into the expected Python data type, raising\n        django.core.exceptions.ValidationError if the data can't be converted.\n        Return the converted value. Subclasses should override this.\n        \"\"\""
        },
        {
          "name": "validators",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ],
          "docstring": "\"\"\"\n        Some validators can't be created at field initialization time.\n        This method provides a way to delay their creation until required.\n        \"\"\""
        },
        {
          "name": "run_validators",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "validate",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model_instance",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Validate value and raise ValidationError if necessary. Subclasses\n        should override this to provide validation logic.\n        \"\"\""
        },
        {
          "name": "clean",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model_instance",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Convert the value's type and run validation. Validation errors\n        from to_python() and validate() are propagated. Return the correct\n        value if no error is raised.\n        \"\"\""
        },
        {
          "name": "db_type_parameters",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "db_check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return the database column check constraint for this field, for the\n        provided connection. Works the same way as db_type() for the case that\n        get_internal_type() does not map to a preexisting model field.\n        \"\"\""
        },
        {
          "name": "db_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return the database column data type for this field, for the provided\n        connection.\n        \"\"\""
        },
        {
          "name": "rel_db_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return the data type that a related field pointing to this field should\n        use. For example, this method is called by ForeignKey and OneToOneField\n        to determine its data type.\n        \"\"\""
        },
        {
          "name": "cast_db_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return the data type to use in the Cast() function.\"\"\""
        },
        {
          "name": "db_parameters",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Extension of db_type(), providing a range of different return values\n        (type, checks). This will look at db_type(), allowing custom model\n        fields to override it.\n        \"\"\""
        },
        {
          "name": "db_type_suffix",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_converters",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "unique",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        },
        {
          "name": "db_tablespace",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        },
        {
          "name": "db_returning",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ],
          "docstring": "\"\"\"\n        Private API intended only to be used by Django itself. Currently only\n        the PostgreSQL backend supports returning multiple fields on a model.\n        \"\"\""
        },
        {
          "name": "set_attributes_from_name",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "name",
              "annotation": null
            }
          ]
        },
        {
          "name": "contribute_to_class",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "cls",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "name",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "private_only",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Register the field with the model class it belongs to.\n\n        If private_only is True, create a separate instance of this field\n        for every subclass of cls, even if cls is not an abstract model.\n        \"\"\""
        },
        {
          "name": "get_filter_kwargs_for_object",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "obj",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return a dict that when passed as kwargs to self.model.filter(), would\n        yield all instances having the same value for this field as obj has.\n        \"\"\""
        },
        {
          "name": "get_attname",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_attname_column",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "pre_save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model_instance",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "add",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return field's value just before saving.\"\"\""
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Perform preliminary non-db specific value checks and conversions.\"\"\""
        },
        {
          "name": "get_db_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "prepared",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return field's value prepared for interacting with the database backend.\n\n        Used by the default implementations of get_db_prep_save().\n        \"\"\""
        },
        {
          "name": "get_db_prep_save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return field's value prepared for saving into a database.\"\"\""
        },
        {
          "name": "has_default",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return a boolean of whether this field has a default value.\"\"\""
        },
        {
          "name": "get_default",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return the default value for this field.\"\"\""
        },
        {
          "name": "get_choices",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "include_blank",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "blank_choice",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "limit_choices_to",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "ordering",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return choices with a default blank choices included, for use\n        as <select> choices for this field.\n        \"\"\""
        },
        {
          "name": "value_to_string",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "obj",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return a string value of this field from the passed obj.\n        This is used by the serialization framework.\n        \"\"\""
        },
        {
          "name": "save_form_data",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "instance",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "data",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "form_class",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "choices_form_class",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return a django.forms.Field instance for this field.\"\"\""
        },
        {
          "name": "value_from_object",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "obj",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Return the value of this field in the given model instance.\"\"\""
        }
      ],
      "classes": [],
      "docstring": "\"\"\"Base class for all field types\"\"\"",
      "decorators": [
        {
          "name": "@total_ordering"
        }
      ]
    },
    {
      "name": "BooleanField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "CharField",
      "methods": [
        {
          "name": "check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "cast_db_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "CommaSeparatedIntegerField",
      "methods": [],
      "classes": []
    },
    {
      "name": "DateTimeCheckMixin",
      "methods": [
        {
          "name": "check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "DateField",
      "methods": [
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "pre_save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model_instance",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "add",
              "annotation": null
            }
          ]
        },
        {
          "name": "contribute_to_class",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "cls",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "name",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "prepared",
              "annotation": null
            }
          ]
        },
        {
          "name": "value_to_string",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "obj",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "DateTimeField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "pre_save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model_instance",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "add",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "prepared",
              "annotation": null
            }
          ]
        },
        {
          "name": "value_to_string",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "obj",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "DecimalField",
      "methods": [
        {
          "name": "check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "validators",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "context",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_prep_save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "DurationField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "prepared",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_converters",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "value_to_string",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "obj",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Store timedelta objects.\n\n    Use interval on PostgreSQL, INTERVAL DAY TO SECOND on Oracle, and bigint\n    of microseconds on other databases.\n    \"\"\""
    },
    {
      "name": "EmailField",
      "methods": [
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "FilePathField",
      "methods": [
        {
          "name": "check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "FloatField",
      "methods": [
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "IntegerField",
      "methods": [
        {
          "name": "check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "validators",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@cached_property"
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "BigIntegerField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "SmallIntegerField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "IPAddressField",
      "methods": [
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "GenericIPAddressField",
      "methods": [
        {
          "name": "check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "prepared",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "NullBooleanField",
      "methods": [
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "PositiveIntegerRelDbTypeMixin",
      "methods": [
        {
          "name": "rel_db_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return the data type that a related field pointing to this field should\n        use. In most cases, a foreign key pointing to a positive integer\n        primary key will have an integer column data type but some databases\n        (e.g. MySQL) have an unsigned integer type. In that case\n        (related_fields_match_type=True), the primary key should return its\n        db_type.\n        \"\"\""
        }
      ],
      "classes": []
    },
    {
      "name": "PositiveBigIntegerField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "PositiveIntegerField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "PositiveSmallIntegerField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "SlugField",
      "methods": [
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "TextField",
      "methods": [
        {
          "name": "check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "TimeField",
      "methods": [
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "pre_save",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model_instance",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "add",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "prepared",
              "annotation": null
            }
          ]
        },
        {
          "name": "value_to_string",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "obj",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "URLField",
      "methods": [
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "BinaryField",
      "methods": [
        {
          "name": "check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_placeholder",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_default",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "prepared",
              "annotation": null
            }
          ]
        },
        {
          "name": "value_to_string",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "obj",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"Binary data is serialized as base64\"\"\""
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "UUIDField",
      "methods": [
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "prepared",
              "annotation": null
            }
          ]
        },
        {
          "name": "to_python",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "AutoFieldMixin",
      "methods": [
        {
          "name": "check",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "deconstruct",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "validate",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "model_instance",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_db_prep_value",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "value",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "prepared",
              "annotation": null
            }
          ]
        },
        {
          "name": "contribute_to_class",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "cls",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "name",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        },
        {
          "name": "formfield",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "**",
              "name": "kwargs",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "AutoFieldMeta",
      "methods": [],
      "classes": [],
      "docstring": "\"\"\"\n    Metaclass to maintain backward inheritance compatibility for AutoField.\n\n    It is intended that AutoFieldMixin become public API when it is possible to\n    create a non-integer automatically-generated field using column defaults\n    stored in the database.\n\n    In many areas Django also relies on using isinstance() to check for an\n    automatically-generated field as a subclass of AutoField. A new flag needs\n    to be implemented on Field to be used instead.\n\n    When these issues have been addressed, this metaclass could be used to\n    deprecate inheritance from AutoField and use of isinstance() with AutoField\n    for detecting automatically-generated fields.\n    \"\"\""
    },
    {
      "name": "AutoField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "rel_db_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "BigAutoField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "rel_db_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    },
    {
      "name": "SmallAutoField",
      "methods": [
        {
          "name": "get_internal_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "rel_db_type",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    }
  ]
}