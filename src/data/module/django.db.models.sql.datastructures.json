{
  "functions": [],
  "classes": [
    {
      "name": "MultiJoin",
      "methods": [],
      "classes": [],
      "docstring": "\"\"\"\n    Used by join construction code to indicate the point at which a\n    multi-valued join was attempted (if the caller wants to treat that\n    exceptionally).\n    \"\"\""
    },
    {
      "name": "Empty",
      "methods": [],
      "classes": []
    },
    {
      "name": "Join",
      "methods": [
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Generate the full\n           LEFT OUTER JOIN sometable ON sometable.somecol = othertable.othercol, params\n        clause for this join.\n        \"\"\""
        },
        {
          "name": "relabeled_clone",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "change_map",
              "annotation": null
            }
          ]
        },
        {
          "name": "identity",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        },
        {
          "name": "equals",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "other",
              "annotation": null
            }
          ]
        },
        {
          "name": "demote",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        },
        {
          "name": "promote",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Used by sql.Query and sql.SQLCompiler to generate JOIN clauses into the\n    FROM entry. For example, the SQL generated could be\n        LEFT OUTER JOIN \"sometable\" T1 ON (\"othertable\".\"sometable_id\" = \"sometable\".\"id\")\n\n    This class is primarily used in Query.alias_map. All entries in alias_map\n    must be Join compatible by providing the following attributes and methods:\n        - table_name (string)\n        - table_alias (possible alias for the table, can be None)\n        - join_type (can be None for those entries that aren't joined from\n          anything)\n        - parent_alias (which table is this join's parent, can be None similarly\n          to join_type)\n        - as_sql()\n        - relabeled_clone()\n    \"\"\""
    },
    {
      "name": "BaseTable",
      "methods": [
        {
          "name": "as_sql",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "compiler",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "connection",
              "annotation": null
            }
          ]
        },
        {
          "name": "relabeled_clone",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "change_map",
              "annotation": null
            }
          ]
        },
        {
          "name": "identity",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        },
        {
          "name": "equals",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "other",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    The BaseTable class is used for base table references in FROM clause. For\n    example, the SQL \"foo\" in\n        SELECT * FROM \"foo\" WHERE somecond\n    could be generated by this class.\n    \"\"\""
    }
  ],
  "docstring": "\"\"\"\nUseful auxiliary data structures for query construction. Not useful outside\nthe SQL domain.\n\"\"\""
}