{
  "functions": [
    {
      "name": "copy_exception",
      "params": [
        {
          "prefix": "",
          "name": "exc",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "backend",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Create a new TemplateDoesNotExist. Preserve its declared attributes and\n    template debug data but discard __traceback__, __context__, and __cause__\n    to make this object suitable for keeping around (in a cache, for example).\n    \"\"\""
    },
    {
      "name": "reraise",
      "params": [
        {
          "prefix": "",
          "name": "exc",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "backend",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Reraise TemplateDoesNotExist while maintaining template debug information.\n    \"\"\""
    },
    {
      "name": "get_installed_libraries",
      "params": [],
      "docstring": "\"\"\"\n    Return the built-in template tag libraries and those from installed\n    applications. Libraries are stored in a dictionary where keys are the\n    individual module names, not the full module paths. Example:\n    django.templatetags.i18n is stored as i18n.\n    \"\"\""
    },
    {
      "name": "get_package_libraries",
      "params": [
        {
          "prefix": "",
          "name": "pkg",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Recursively yield template tag libraries defined in submodules of a\n    package.\n    \"\"\""
    }
  ],
  "classes": [
    {
      "name": "DjangoTemplates",
      "methods": [
        {
          "name": "from_string",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template_code",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_template",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "template_name",
              "annotation": null
            }
          ]
        },
        {
          "name": "get_templatetag_libraries",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "custom_libraries",
              "annotation": null
            }
          ],
          "docstring": "\"\"\"\n        Return a collation of template tag libraries from installed\n        applications and the supplied custom_libraries argument.\n        \"\"\""
        }
      ],
      "classes": []
    },
    {
      "name": "Template",
      "methods": [
        {
          "name": "origin",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [
            {
              "name": "@property"
            }
          ]
        },
        {
          "name": "render",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "context",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "request",
              "annotation": null
            }
          ]
        }
      ],
      "classes": []
    }
  ]
}