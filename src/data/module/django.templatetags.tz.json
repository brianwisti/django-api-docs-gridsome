{
  "functions": [
    {
      "name": "timezone_constructor",
      "params": [
        {
          "prefix": "",
          "name": "tzname",
          "annotation": null
        }
      ]
    },
    {
      "name": "localtime",
      "params": [
        {
          "prefix": "",
          "name": "value",
          "annotation": null
        }
      ],
      "decorators": [
        {
          "name": "# Template filters\n\n@register.filter"
        }
      ],
      "docstring": "\"\"\"\n    Convert a datetime to local time in the active time zone.\n\n    This only makes sense within a {% localtime off %} block.\n    \"\"\""
    },
    {
      "name": "utc",
      "params": [
        {
          "prefix": "",
          "name": "value",
          "annotation": null
        }
      ],
      "decorators": [
        {
          "name": "@register.filter"
        }
      ],
      "docstring": "\"\"\"\n    Convert a datetime to UTC.\n    \"\"\""
    },
    {
      "name": "do_timezone",
      "params": [
        {
          "prefix": "",
          "name": "value",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "arg",
          "annotation": null
        }
      ],
      "decorators": [
        {
          "name": "@register.filter('timezone')"
        }
      ],
      "docstring": "\"\"\"\n    Convert a datetime to local time in a given time zone.\n\n    The argument must be an instance of a tzinfo subclass or a time zone name.\n\n    Naive datetimes are assumed to be in local time in the default time zone.\n    \"\"\""
    },
    {
      "name": "localtime_tag",
      "params": [
        {
          "prefix": "",
          "name": "parser",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "token",
          "annotation": null
        }
      ],
      "decorators": [
        {
          "name": "@register.tag('localtime')"
        }
      ],
      "docstring": "\"\"\"\n    Force or prevent conversion of datetime objects to local time,\n    regardless of the value of ``settings.USE_TZ``.\n\n    Sample usage::\n\n        {% localtime off %}{{ value_in_utc }}{% endlocaltime %}\n    \"\"\""
    },
    {
      "name": "timezone_tag",
      "params": [
        {
          "prefix": "",
          "name": "parser",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "token",
          "annotation": null
        }
      ],
      "decorators": [
        {
          "name": "@register.tag('timezone')"
        }
      ],
      "docstring": "\"\"\"\n    Enable a given time zone just for this block.\n\n    The ``timezone`` argument must be an instance of a ``tzinfo`` subclass, a\n    time zone name, or ``None``. If it is ``None``, the default time zone is\n    used within the block.\n\n    Sample usage::\n\n        {% timezone \"Europe/Paris\" %}\n            It is {{ now }} in Paris.\n        {% endtimezone %}\n    \"\"\""
    },
    {
      "name": "get_current_timezone_tag",
      "params": [
        {
          "prefix": "",
          "name": "parser",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "token",
          "annotation": null
        }
      ],
      "decorators": [
        {
          "name": "@register.tag(\"get_current_timezone\")"
        }
      ],
      "docstring": "\"\"\"\n    Store the name of the current time zone in the context.\n\n    Usage::\n\n        {% get_current_timezone as TIME_ZONE %}\n\n    This will fetch the currently active time zone and put its name\n    into the ``TIME_ZONE`` context variable.\n    \"\"\""
    }
  ],
  "classes": [
    {
      "name": "UnknownTimezoneException",
      "methods": [],
      "classes": []
    },
    {
      "name": "datetimeobject",
      "methods": [],
      "classes": []
    },
    {
      "name": "LocalTimeNode",
      "methods": [
        {
          "name": "render",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "context",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Template node class used by ``localtime_tag``.\n    \"\"\""
    },
    {
      "name": "TimezoneNode",
      "methods": [
        {
          "name": "render",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "context",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Template node class used by ``timezone_tag``.\n    \"\"\""
    },
    {
      "name": "GetCurrentTimezoneNode",
      "methods": [
        {
          "name": "render",
          "params": [
            {
              "prefix": "",
              "name": "self",
              "annotation": null
            },
            {
              "prefix": "",
              "name": "context",
              "annotation": null
            }
          ]
        }
      ],
      "classes": [],
      "docstring": "\"\"\"\n    Template node class used by ``get_current_timezone_tag``.\n    \"\"\""
    }
  ]
}