{
  "functions": [
    {
      "name": "format",
      "params": [
        {
          "prefix": "",
          "name": "number",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "decimal_sep",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "decimal_pos",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "grouping",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "thousand_sep",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "force_grouping",
          "annotation": null
        },
        {
          "prefix": "",
          "name": "use_l10n",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Get a number (as a number or string), and return it as a string,\n    using formats defined as arguments:\n\n    * decimal_sep: Decimal separator symbol (for example \".\")\n    * decimal_pos: Number of decimal positions\n    * grouping: Number of digits in every group limited by thousand separator.\n        For non-uniform digit grouping, it can be a sequence with the number\n        of digit group sizes following the format used by the Python locale\n        module in locale.localeconv() LC_NUMERIC grouping (e.g. (3, 2, 0)).\n    * thousand_sep: Thousand separator symbol (for example \",\")\n    \"\"\""
    }
  ],
  "classes": []
}