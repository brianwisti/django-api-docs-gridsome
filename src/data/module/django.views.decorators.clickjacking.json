{
  "functions": [
    {
      "name": "xframe_options_deny",
      "params": [
        {
          "prefix": "",
          "name": "view_func",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Modify a view function so its response has the X-Frame-Options HTTP\n    header set to 'DENY' as long as the response doesn't already have that\n    header set. Usage:\n\n    @xframe_options_deny\n    def some_view(request):\n        ...\n    \"\"\""
    },
    {
      "name": "xframe_options_sameorigin",
      "params": [
        {
          "prefix": "",
          "name": "view_func",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Modify a view function so its response has the X-Frame-Options HTTP\n    header set to 'SAMEORIGIN' as long as the response doesn't already have\n    that header set. Usage:\n\n    @xframe_options_sameorigin\n    def some_view(request):\n        ...\n    \"\"\""
    },
    {
      "name": "xframe_options_exempt",
      "params": [
        {
          "prefix": "",
          "name": "view_func",
          "annotation": null
        }
      ],
      "docstring": "\"\"\"\n    Modify a view function by setting a response variable that instructs\n    XFrameOptionsMiddleware to NOT set the X-Frame-Options HTTP header. Usage:\n\n    @xframe_options_exempt\n    def some_view(request):\n        ...\n    \"\"\""
    }
  ],
  "classes": []
}